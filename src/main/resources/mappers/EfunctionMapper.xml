<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.EfunctionMapper">
  <resultMap id="BaseResultMap" type="com.ssm.bean.Efunction">
    <id column="fid" jdbcType="BIGINT" property="fid" />
    <result column="fcode" jdbcType="VARCHAR" property="fcode" />
    <result column="fname" jdbcType="VARCHAR" property="fname" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="parentid" jdbcType="BIGINT" property="parentid" />
    <result column="remark1" jdbcType="VARCHAR" property="remark1" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fid, fcode, fname, url, parentid, remark1, remark2
  </sql>
  <select id="selectByExample" parameterType="com.ssm.bean.EfunctionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from efunction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from efunction
    where fid = #{fid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from efunction
    where fid = #{fid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.bean.EfunctionExample">
    delete from efunction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.bean.Efunction">
    insert into efunction (fid, fcode, fname, 
      url, parentid, remark1, 
      remark2)
    values (#{fid,jdbcType=BIGINT}, #{fcode,jdbcType=VARCHAR}, #{fname,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{parentid,jdbcType=BIGINT}, #{remark1,jdbcType=VARCHAR}, 
      #{remark2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.bean.Efunction">
    insert into efunction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="fcode != null">
        fcode,
      </if>
      <if test="fname != null">
        fname,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="parentid != null">
        parentid,
      </if>
      <if test="remark1 != null">
        remark1,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=BIGINT},
      </if>
      <if test="fcode != null">
        #{fcode,jdbcType=VARCHAR},
      </if>
      <if test="fname != null">
        #{fname,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=BIGINT},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.bean.EfunctionExample" resultType="java.lang.Long">
    select count(*) from efunction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update efunction
    <set>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=BIGINT},
      </if>
      <if test="record.fcode != null">
        fcode = #{record.fcode,jdbcType=VARCHAR},
      </if>
      <if test="record.fname != null">
        fname = #{record.fname,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        parentid = #{record.parentid,jdbcType=BIGINT},
      </if>
      <if test="record.remark1 != null">
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update efunction
    set fid = #{record.fid,jdbcType=BIGINT},
      fcode = #{record.fcode,jdbcType=VARCHAR},
      fname = #{record.fname,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      parentid = #{record.parentid,jdbcType=BIGINT},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.bean.Efunction">
    update efunction
    <set>
      <if test="fcode != null">
        fcode = #{fcode,jdbcType=VARCHAR},
      </if>
      <if test="fname != null">
        fname = #{fname,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        parentid = #{parentid,jdbcType=BIGINT},
      </if>
      <if test="remark1 != null">
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.bean.Efunction">
    update efunction
    set fcode = #{fcode,jdbcType=VARCHAR},
      fname = #{fname,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=BIGINT},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR}
    where fid = #{fid,jdbcType=BIGINT}
  </update>
</mapper>